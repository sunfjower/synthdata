[33mcommit afd94411e42545dae9282c4abe47e71a44e65856[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m)[m
Author: sunfjower <peremena.work@gmail.com>
Date:   Tue May 23 12:29:45 2023 +0300

    Testing commit

[1mdiff --git a/Views/Home/About.cshtml b/Views/Home/About.cshtml[m
[1mindex 010bf87..e652b64 100644[m
[1m--- a/Views/Home/About.cshtml[m
[1m+++ b/Views/Home/About.cshtml[m
[36m@@ -1 +1,5 @@[m
 ï»¿@page[m
[32m+[m
[32m+[m[32m<section id="aboutpage_content">[m[41m  [m
[32m+[m
[32m+[m[32m</section>[m
\ No newline at end of file[m

[33mcommit 91d36552edc1ae447cd346dd0ceb1b648388fba8[m
Author: sunfjower <peremena.work@gmail.com>
Date:   Tue May 23 11:36:47 2023 +0300

    Started track all my files

[1mdiff --git a/.gitignore b/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..0b97a9e[m
[1m--- /dev/null[m
[1m+++ b/.gitignore[m
[36m@@ -0,0 +1,18 @@[m
[32m+[m[32m#Dirictories[m
[32m+[m
[32m+[m[32m.config/[m
[32m+[m[32m.vs/[m
[32m+[m[32mbin/[m
[32m+[m[32mobj/[m
[32m+[m[32mnode_modules/[m
[32m+[m[32mProperties/[m
[32m+[m[32mimg/[m
[32m+[m[32mlib/[m
[32m+[m
[32m+[m[32m#Files[m
[32m+[m
[32m+[m[32m*.json[m
[32m+[m[32m*.ico[m
[32m+[m[32m*.sln[m
[32m+[m[32m*.csproj[m
[32m+[m[32m*.csproj.user[m
[1mdiff --git a/Controllers/BaseController.cs b/Controllers/BaseController.cs[m
[1mnew file mode 100644[m
[1mindex 0000000..b397fa4[m
[1m--- /dev/null[m
[1m+++ b/Controllers/BaseController.cs[m
[36m@@ -0,0 +1,80 @@[m
[32m+[m[32mï»¿using Microsoft.AspNetCore.Mvc;[m
[32m+[m[32musing OfficeOpenXml;[m
[32m+[m[32musing System.Dynamic;[m
[32m+[m[32musing OfficeOpenXml.LoadFunctions.Params;[m
[32m+[m[32musing Newtonsoft.Json;[m
[32m+[m[32musing System.Text;[m
[32m+[m
[32m+[m[32mnamespace MultipleDataGenerator.Controllers[m
[32m+[m[32m{[m
[32m+[m[32m    public class BaseController : Controller[m
[32m+[m[32m    {[m
[32m+[m[32m        protected List<object> ShuffleList(List<object> listToShuffle)[m
[32m+[m[32m        {[m
[32m+[m[32m            //https://code-maze.com/csharp-randomize-list/[m
[32m+[m
[32m+[m[32m            var _rand = new Random();[m
[32m+[m[32m            var shuffledList = listToShuffle.OrderBy(_ => _rand.Next()).ToList();[m
[32m+[m[32m            return shuffledList;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        [HttpGet][m
[32m+[m[32m        protected ActionResult XlsxDownload(string result)[m[41m [m
[32m+[m[32m        {[m
[32m+[m[32m            var jsonItems = JsonConvert.DeserializeObject<IEnumerable<ExpandoObject>>(result);[m
[32m+[m
[32m+[m[32m            using (var package = new ExcelPackage())[m
[32m+[m[32m            {[m
[32m+[m[32m                var workSheet = package.Workbook.Worksheets.Add("Table1");[m
[32m+[m
[32m+[m[32m                workSheet.Cells.LoadFromCollection(jsonItems, c =>[m
[32m+[m[32m                {[m
[32m+[m[32m                    c.PrintHeaders = true;[m
[32m+[m[32m                    c.HeaderParsingType = HeaderParsingTypes.UnderscoreToSpace;[m
[32m+[m[32m                });[m
[32m+[m
[32m+[m[32m                var excelData = package.GetAsByteArray();[m
[32m+[m[32m                var mimeType = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet";[m
[32m+[m[32m                var fileName = "synthdata.xlsx";[m
[32m+[m
[32m+[m[32m                return File(excelData, mimeType, fileName);[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        [HttpGet][m
[32m+[m[32m        protected ActionResult JsonDownload(string result)[m[41m [m
[32m+[m[32m        {[m
[32m+[m[32m            var fileName = "synthdata.json";[m
[32m+[m[32m            var mimeType = "text/plain";[m
[32m+[m[32m            var jsonData = Encoding.ASCII.GetBytes(result);[m
[32m+[m[41m            [m
[32m+[m[32m            return File(jsonData, mimeType, fileName);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        [HttpGet][m
[32m+[m[32m        protected ActionResult CsvDownload(string result)[m[41m [m
[32m+[m[32m        {[m
[32m+[m[32m            var jsonItems = JsonConvert.DeserializeObject<IEnumerable<ExpandoObject>>(result);[m
[32m+[m
[32m+[m[32m            using (var package = new ExcelPackage())[m
[32m+[m[32m            {[m
[32m+[m[32m                var workSheet = package.Workbook.Worksheets.Add("Table1");[m
[32m+[m
[32m+[m[32m                workSheet.Cells.LoadFromCollection(jsonItems, c =>[m
[32m+[m[32m                {[m
[32m+[m[32m                    c.PrintHeaders = true;[m
[32m+[m[32m                    c.HeaderParsingType = HeaderParsingTypes.UnderscoreToSpace;[m
[32m+[m[32m                });[m
[32m+[m
[32m+[m[32m                var content = workSheet.Cells["A1:J10"].ToText();[m
[32m+[m
[32m+[m[32m                var csvData = Encoding.ASCII.GetBytes(content);[m
[32m+[m
[32m+[m[32m                var fileName = "synthdata.csv";[m
[32m+[m[32m                var mimeType = "text/csv";[m
[32m+[m
[32m+[m[32m                return File(csvData, mimeType,fileName);[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/Controllers/GeneratorController.cs b/Controllers/GeneratorController.cs[m
[1mnew file mode 100644[m
[1mindex 0000000..f1acaaf[m
[1m--- /dev/null[m
[1m+++ b/Controllers/GeneratorController.cs[m
[36m@@ -0,0 +1,60 @@[m
[32m+[m[32mï»¿using Microsoft.AspNetCore.Mvc;[m
[32m+[m[32musing MongoDB.Bson;[m
[32m+[m[32musing MultipleDataGenerator.Services;[m
[32m+[m[32musing Newtonsoft.Json;[m
[32m+[m
[32m+[m[32mnamespace MultipleDataGenerator.Controllers[m
[32m+[m[32m{[m
[32m+[m[32m    public class GeneratorController : BaseController[m
[32m+[m[32m    {[m
[32m+[m[32m        private readonly DataGeneratorService _dataGeneratorService;[m
[32m+[m
[32m+[m[32m        public GeneratorController(DataGeneratorService dataGeneratorService)[m[41m [m
[32m+[m[32m        {[m
[32m+[m[32m            _dataGeneratorService = dataGeneratorService;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        public IActionResult Preset()[m[41m [m
[32m+[m[32m        {[m
[32m+[m[32m            return View();[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        [HttpGet][m
[32m+[m[32m        public async Task<ActionResult> GetAll(string names, string types, string format)[m
[32m+[m[32m        {[m
[32m+[m[32m            /* TEMPORARY: list for query[m[41m [m
[32m+[m[32m            var fieldTypes = new List<string> { "Name", "Name" };[m
[32m+[m[32m            var fieldNames = new List<string> { "Title Name", "Title Name2" };*/[m
[32m+[m
[32m+[m[32m            var fieldNames = names.Split(',').ToList();[m
[32m+[m[32m            var fieldTypes = types.Split(',').ToList();[m
[32m+[m
[32m+[m[32m            //  TODO: Reprocess funtion[m
[32m+[m[32m            for (int i = 0; i < fieldNames.Count; i++)[m
[32m+[m[32m            {[m
[32m+[m[32m                fieldNames[i] = fieldNames[i].Replace(" ", "_");[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            var data = await _dataGeneratorService.GetAsync(fieldNames, fieldTypes);[m
[32m+[m
[32m+[m[32m            //  TODO: If data null "Return message for user about nulleble data."[m
[32m+[m[32m            var result = data.ConvertAll(BsonTypeMapper.MapToDotNetValue);[m
[32m+[m
[32m+[m[32m            result = ShuffleList(result);[m
[32m+[m
[32m+[m[32m            var jsonResult = JsonConvert.SerializeObject(result, Formatting.Indented);[m
[32m+[m
[32m+[m[32m            switch (format)[m
[32m+[m[32m            {[m
[32m+[m[32m                case "CSV":[m
[32m+[m[32m                    return CsvDownload(jsonResult);[m
[32m+[m[32m                case "Excel":[m
[32m+[m[32m                    return XlsxDownload(jsonResult);[m
[32m+[m[32m                case "JSON":[m
[32m+[m[32m                    return JsonDownload(jsonResult);[m
[32m+[m[32m                default:[m
[32m+[m[32m                    return CsvDownload(jsonResult);[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/Controllers/HomeController.cs b/Controllers/HomeController.cs[m
[1mnew file mode 100644[m
[1mindex 0000000..e1df234[m
[1m--- /dev/null[m
[1m+++ b/Controllers/HomeController.cs[m
[36m@@ -0,0 +1,22 @@[m
[32m+[m[32mï»¿using System.Collections.Generic;[m
[32m+[m[32musing System.Diagnostics;[m
[32m+[m[32musing Microsoft.AspNetCore.Mvc;[m
[32m+[m[32musing MongoDB.Bson;[m
[32m+[m[32musing MultipleDataGenerator.Models;[m
[32m+[m[32musing MultipleDataGenerator.Services;[m
[32m+[m[32musing OfficeOpenXml;[m
[32m+[m
[32m+[m[32mnamespace MultipleDataGenerator.Controllers;[m
[32m+[m
[32m+[m[32mpublic class HomeController : Controller[m
[32m+[m[32m{[m
[32m+[m[32m    public IActionResult Index()[m
[32m+[m[32m    {[m
[32m+[m[32m        return View();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public IActionResult About()[m[41m [m
[32m+[m[32m    {[m
[32m+[m[32m        return View();[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/Models/DataGeneratorDatabaseSettings.cs b/Models/DataGeneratorDatabaseSettings.cs[m
[1mnew file mode 100644[m
[1mindex 0000000..eb396b9[m
[1m--- /dev/null[m
[1m+++ b/Models/DataGeneratorDatabaseSettings.cs[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32mï»¿namespace MultipleDataGenerator.Models[m
[32m+[m[32m{[m
[32m+[m[32m    public class DataGeneratorDatabaseSettings : IDataGeneratorDatabaseSettings[m
[32m+[m[32m    {[m
[32m+[m[32m        public string DatabaseName { get; set; } = null!;[m
[32m+[m
[32m+[m[32m        public string ConnectionString { get; set; } = null!;[m
[32m+[m
[32m+[m[32m        public string EnglishCollectionName { get; set; } = "EnglishData";[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/Models/Field.cs b/Models/Field.cs[m
[1mnew file mode 100644[m
[1mindex 0000000..eb11a6d[m
[1m--- /dev/null[m
[1m+++ b/Models/Field.cs[m
[36m@@ -0,0 +1,14 @@[m
[32m+[m[32mï»¿using Microsoft.AspNetCore.Mvc;[m
[32m+[m[32musing MongoDB.Bson;[m
[32m+[m[32musing MongoDB.Bson.Serialization.Attributes;[m
[32m+[m
[32m+[m[32mnamespace MultipleDataGenerator.Models[m
[32m+[m[32m{[m
[32m+[m[32m    [BindProperties][m
[32m+[m[32m    public class Field[m
[32m+[m[32m    {[m
[32m+[m[32m        public string Name { get; set; } = null!;[m
[32m+[m
[32m+[m[32m        public string Type { get; set; } = null!;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/Models/IDataGeneratorDatabaseSettings.cs b/Models/IDataGeneratorDatabaseSettings.cs[m
[1mnew file mode 100644[m
[1mindex 0000000..a4cad64[m
[1m--- /dev/null[m
[1m+++ b/Models/IDataGeneratorDatabaseSettings.cs[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32mï»¿namespace MultipleDataGenerator.Models[m
[32m+[m[32m{[m
[32m+[m[32m    public interface IDataGeneratorDatabaseSettings[m
[32m+[m[32m    {[m
[32m+[m[32m        public string DatabaseName { get; set; }[m
[32m+[m
[32m+[m[32m        public string ConnectionString { get; set; }[m
[32m+[m
[32m+[m[32m        public string EnglishCollectionName { get; set; }[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/Program.cs b/Program.cs[m
[1mnew file mode 100644[m
[1mindex 0000000..88d318b[m
[1m--- /dev/null[m
[1m+++ b/Program.cs[m
[36m@@ -0,0 +1,29 @@[m
[32m+[m[32musing Microsoft.EntityFrameworkCore;[m
[32m+[m[32musing Microsoft.Extensions.Options;[m
[32m+[m[32musing MultipleDataGenerator.Models;[m
[32m+[m[32musing MultipleDataGenerator.Services;[m
[32m+[m
[32m+[m[32mvar builder = WebApplication.CreateBuilder(args);[m
[32m+[m
[32m+[m[32m// Add services to the container.[m
[32m+[m[32mbuilder.Services.AddControllersWithViews();[m
[32m+[m
[32m+[m[32mbuilder.Services.Configure<DataGeneratorDatabaseSettings>([m
[32m+[m[32m    builder.Configuration.GetSection(nameof(DataGeneratorDatabaseSettings)));[m
[32m+[m
[32m+[m[32mbuilder.Services.AddSingleton<DataGeneratorService>();[m
[32m+[m
[32m+[m[32m/*builder.Services.AddSingleton<IDataGeneratorDatabaseSettings>(provider =>[m
[32m+[m[32m    provider.GetRequiredService<IOptions<DataGeneratorDatabaseSettings>>().Value);[m
[32m+[m[32m*/[m
[32m+[m[32m//builder.Services.AddScoped<DataGeneratorService>();[m
[32m+[m[32m/*builder.Services.AddDbContext<MultipleDataDbContext>(opts => {[m
[32m+[m[32m    opts.UseSqlServer(builder.Configuration["ConnectionStrings:MultipleDataConnection"]);[m
[32m+[m[32m});*/[m
[32m+[m
[32m+[m[32mvar app = builder.Build();[m
[32m+[m
[32m+[m[32mapp.UseStaticFiles();[m
[32m+[m[32mapp.MapDefaultControllerRoute();[m
[32m+[m
[32m+[m[32mapp.Run();[m
[1mdiff --git a/Services/DataGeneratorService.cs b/Services/DataGeneratorService.cs[m
[1mnew file mode 100644[m
[1mindex 0000000..eb2de10[m
[1m--- /dev/null[m
[1m+++ b/Services/DataGeneratorService.cs[m
[36m@@ -0,0 +1,68 @@[m
[32m+[m[32mï»¿using Microsoft.Extensions.Options;[m
[32m+[m[32musing Microsoft.IdentityModel.Tokens;[m
[32m+[m[32musing MongoDB.Bson;[m
[32m+[m[32musing MongoDB.Driver.Linq;[m
[32m+[m[32musing MongoDB.Driver;[m
[32m+[m[32musing MultipleDataGenerator.Models;[m
[32m+[m[32musing System.Security.Cryptography;[m
[32m+[m[32musing System.Text.Json.Nodes;[m
[32m+[m[32musing System.Text.RegularExpressions;[m
[32m+[m
[32m+[m[32mnamespace MultipleDataGenerator.Services[m
[32m+[m[32m{[m
[32m+[m[32m    public class DataGeneratorService[m
[32m+[m[32m    {[m
[32m+[m[32m        private readonly IMongoCollection<BsonDocument> _fieldsCollection;[m
[32m+[m
[32m+[m[32m        public DataGeneratorService(IOptions<DataGeneratorDatabaseSettings> dataGeneratorDatabaseSettings)[m[41m [m
[32m+[m[32m        {[m
[32m+[m[32m            var mongoClient = new MongoClient(dataGeneratorDatabaseSettings.Value.ConnectionString);[m
[32m+[m[32m            var mongoDatabase = mongoClient.GetDatabase(dataGeneratorDatabaseSettings.Value.DatabaseName);[m
[32m+[m[32m            _fieldsCollection = mongoDatabase.GetCollection<BsonDocument>(dataGeneratorDatabaseSettings.Value.EnglishCollectionName);[m
[32m+[m[32m        }[m
[32m+[m[41m        [m
[32m+[m[32m        public async Task<List<BsonDocument>> GetAsync(string firstParam, string secondParam)[m[41m [m
[32m+[m[32m        {[m
[32m+[m[32m            var filter = Builders<BsonDocument>.Filter.Empty;[m
[32m+[m[32m            var projection = Builders<BsonDocument>.Projection.Include(firstParam).Include(secondParam).Include(secondParam).Exclude("_id");[m
[32m+[m
[32m+[m[32m            return await _fieldsCollection.Find(filter).Project(projection).ToListAsync();[m
[32m+[m
[32m+[m[32m            //return await _fieldsCollection.Find<BsonDocument>(filter).ToListAsync();[m
[32m+[m[32m            //return await _fieldsCollection.Find(FilterDefinition<BsonDocument>.Empty).Project(Builders<BsonDocument>.Projection.Include("Name").Exclude("_id")).First().ToListAsync();[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        public async Task<List<BsonDocument>?> GetAsync(List<string> fieldNames, List<string> fieldTypes)[m
[32m+[m[32m        {[m
[32m+[m[32m            //  TODO: If input data null => return nothing.[m
[32m+[m
[32m+[m[32m            /*if (fieldNames.IsNullOrEmpty() || fieldTypes.IsNullOrEmpty())[m[41m [m
[32m+[m[32m            {[m
[32m+[m[32m                return null;[m
[32m+[m[41m            [m
[32m+[m[32m            }*/[m
[32m+[m
[32m+[m[32m            var filter = Builders<BsonDocument>.Filter.Empty;[m
[32m+[m
[32m+[m[32m            //  TODO: Make separate method for this functionality.[m
[32m+[m[32m            //  START=>[m
[32m+[m[32m            var namesAndTypes = fieldNames.Zip(fieldTypes, (n, t) => new { Name = n, Type = t });[m
[32m+[m
[32m+[m[32m            string projection = "{_id:0";[m
[32m+[m
[32m+[m[32m            foreach (var field in namesAndTypes)[m
[32m+[m[32m            {[m
[32m+[m[32m                projection += $", {field.Name}:'${field.Type}'";[m[41m [m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            projection += "}";[m
[32m+[m[32m            //  END[m
[32m+[m
[32m+[m[32m            //string customProjection = "{_id:0, UserName:'$Name'}";[m
[32m+[m
[32m+[m[32m            var result = await _fieldsCollection.Find(filter).Project(projection).ToListAsync();[m
[32m+[m
[32m+[m[32m            return result;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/Views/Generator/Preset.cshtml b/Views/Generator/Preset.cshtml[m
[1mnew file mode 100644[m
[1mindex 0000000..62e6f8b[m
[1m--- /dev/null[m
[1m+++ b/Views/Generator/Preset.cshtml[m
[36m@@ -0,0 +1,42 @@[m
[32m+[m[32mï»¿@page[m
[32m+[m
[32m+[m[32m<section id="presetpage_content">[m
[32m+[m[32m    <div class="container">[m
[32m+[m[32m        <div>[m
[32m+[m[32m            <table id="configurationTable">[m
[32m+[m[32m                <thead>[m
[32m+[m[32m                    <tr>[m
[32m+[m[32m                        <th>Field Name</th>[m
[32m+[m[32m                        <th>Field Type</th>[m
[32m+[m[32m                    </tr>[m
[32m+[m[32m                </thead>[m
[32m+[m[32m                <tbody>[m
[32m+[m[32m                    <tr>[m
[32m+[m[32m                        <td><input name="fieldName" placeholder="Your field name" required></td>[m
[32m+[m[32m                        <td>[m
[32m+[m[32m                            <select name="fieldType"></select>[m
[32m+[m[32m                        </td>[m
[32m+[m[32m                        <td>[m
[32m+[m[32m                            <button class="add_btn" onclick="addTableField(this)">Add</button>[m
[32m+[m[32m                        </td>[m
[32m+[m[32m                    </tr>[m
[32m+[m[32m                </tbody>[m
[32m+[m[32m            </table>[m
[32m+[m[32m        </div>[m
[32m+[m[32m        <div class="">[m
[32m+[m[32m            <label>Total Rows</label>[m
[32m+[m[32m            <input required>[m
[32m+[m
[32m+[m[32m            <label>Format</label>[m
[32m+[m[32m            <select name="fileFormat">[m
[32m+[m[32m                <option>Excel</option>[m
[32m+[m[32m                <option>JSON</option>[m
[32m+[m[32m                <option>CSV</option>[m
[32m+[m[32m            </select>[m
[32m+[m[32m        </div>[m
[32m+[m
[32m+[m[32m        <div>[m
[32m+[m[32m            <button id="generate" class="generate_btn" onclick="requestDataGeneration(this)">Generate</button>[m
[32m+[m[32m        </div>[m
[32m+[m[32m    </div>[m
[32m+[m[32m</section>[m
[1mdiff --git a/Views/Home/About.cshtml b/Views/Home/About.cshtml[m
[1mnew file mode 100644[m
[1mindex 0000000..010bf87[m
[1m--- /dev/null[m
[1m+++ b/Views/Home/About.cshtml[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32mï»¿@page[m
[1mdiff --git a/Views/Home/Index.cshtml b/Views/Home/Index.cshtml[m
[1mnew file mode 100644[m
[1mindex 0000000..d90d67a[m
[1m--- /dev/null[m
[1m+++ b/Views/Home/Index.cshtml[m
[36m@@ -0,0 +1,8 @@[m
[32m+[m[32mï»¿@page[m
[32m+[m
[32m+[m[32m<section id="homepage_content">[m
[32m+[m[32m    <h1>Generate realistic mock data for all your testing and development needs.</h1>[m
[32m+[m[32m    <a asp-controller="Generator" asp-action="Preset" class="start_btn">Get Started</a>[m
[32m+[m[32m</section>[m
[32m+[m
[32m+[m
[1mdiff --git a/Views/Shared/_Layout.cshtml b/Views/Shared/_Layout.cshtml[m
[1mnew file mode 100644[m
[1mindex 0000000..daae3eb[m
[1m--- /dev/null[m
[1m+++ b/Views/Shared/_Layout.cshtml[m
[36m@@ -0,0 +1,45 @@[m
[32m+[m[32mï»¿<!DOCTYPE html>[m
[32m+[m[32m<html lang="en">[m
[32m+[m[32m<head>[m
[32m+[m[32m    <meta name="viewport" content="width=device-width" />[m
[32m+[m[32m    <title>First Page</title>[m
[32m+[m[32m    @*Scripts*@[m
[32m+[m[32m    <script type="text/javascript" src="~/lib/jquery/dist/jquery.min.js"></script>[m
[32m+[m[32m    <script type="text/javascript" src="~/js/site.js"></script>[m
[32m+[m[32m    @*Styles*@[m
[32m+[m[32m    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" integrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw==" crossorigin="anonymous" referrerpolicy="no-referrer" />[m
[32m+[m[32m    <link rel="stylesheet" href="~/css/site.css" />[m
[32m+[m[32m    @*Fonts*@[m
[32m+[m[32m    <link rel="preconnect" href="https://fonts.googleapis.com">[m
[32m+[m[32m    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>[m
[32m+[m[32m    <link href="https://fonts.googleapis.com/css2?family=Ubuntu:wght@300;400;500;700&display=swap" rel="stylesheet">[m
[32m+[m[32m</head>[m
[32m+[m[32m<body>[m
[32m+[m[32m    <header>[m
[32m+[m[32m        <a class="logo" asp-controller="Home" asp-action="Index"><img src="~/img/synthLogo7.svg" alt="Logo" /></a>[m
[32m+[m[32m        <nav>[m
[32m+[m[32m            <ul class="nav_links">[m
[32m+[m[32m                <li><a asp-controller="Home" asp-action="Index">Home</a></li>[m
[32m+[m[32m                <li><a asp-controller="Generator" asp-action="Preset">Generator</a></li>[m
[32m+[m[32m                <li> <a asp-controller="Home" asp-action="About">About</a></li>[m
[32m+[m[32m            </ul>[m
[32m+[m[32m        </nav>[m
[32m+[m[32m        <div class="toggle_btn" onclick="toggleMenu(this)">[m
[32m+[m[32m            <i class="fa-solid fa-bars"></i>[m
[32m+[m[32m        </div>[m
[32m+[m
[32m+[m[32m        <div class="dropdown_menu">[m
[32m+[m[32m            <ul>[m
[32m+[m[32m                <li><a asp-controller="Home" asp-action="Index">Home</a></li>[m
[32m+[m[32m                <li><a asp-controller="Generator" asp-action="Preset">Generator</a></li>[m
[32m+[m[32m                <li><a asp-controller="Home" asp-action="About">About</a></li>[m
[32m+[m[32m            </ul>[m
[32m+[m[32m        </div>[m
[32m+[m[32m    </header>[m
[32m+[m[32m    <main>[m
[32m+[m[32m        @RenderBody()[m
[32m+[m[32m    </main>[m
[32m+[m
[32m+[m[32m    @RenderSection("Scripts", required:false)[m
[32m+[m[32m</body>[m
[32m+[m[32m</html>[m
\ No newline at end of file[m
[1mdiff --git a/Views/Shared/_Layout.cshtml.css b/Views/Shared/_Layout.cshtml.css[m
[1mnew file mode 100644[m
[1mindex 0000000..a72cbea[m
[1m--- /dev/null[m
[1m+++ b/Views/Shared/_Layout.cshtml.css[m
[36m@@ -0,0 +1,48 @@[m
[32m+[m[32mï»¿/* Please see documentation at https://docs.microsoft.com/aspnet/core/client-side/bundling-and-minification[m
[32m+[m[32mfor details on configuring this project to bundle and minify static web assets. */[m
[32m+[m
[32m+[m[32ma.navbar-brand {[m
[32m+[m[32m  white-space: normal;[m
[32m+[m[32m  text-align: center;[m
[32m+[m[32m  word-break: break-all;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32ma {[m
[32m+[m[32m  color: #0077cc;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.btn-primary {[m
[32m+[m[32m  color: #fff;[m
[32m+[m[32m  background-color: #1b6ec2;[m
[32m+[m[32m  border-color: #1861ac;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.nav-pills .nav-link.active, .nav-pills .show > .nav-link {[m
[32m+[m[32m  color: #fff;[m
[32m+[m[32m  background-color: #1b6ec2;[m
[32m+[m[32m  border-color: #1861ac;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.border-top {[m
[32m+[m[32m  border-top: 1px solid #e5e5e5;[m
[32m+[m[32m}[m
[32m+[m[32m.border-bottom {[m
[32m+[m[32m  border-bottom: 1px solid #e5e5e5;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.box-shadow {[m
[32m+[m[32m  box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mbutton.accept-policy {[m
[32m+[m[32m  font-size: 1rem;[m
[32m+[m[32m  line-height: inherit;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.footer {[m
[32m+[m[32m  position: absolute;[m
[32m+[m[32m  bottom: 0;[m
[32m+[m[32m  width: 100%;[m
[32m+[m[32m  white-space: nowrap;[m
[32m+[m[32m  line-height: 60px;[m
[32m+[m[32m}[m
[1mdiff --git a/Views/_ViewImports.cshtml b/Views/_ViewImports.cshtml[m
[1mnew file mode 100644[m
[1mindex 0000000..3487b4b[m
[1m--- /dev/null[m
[1m+++ b/Views/_ViewImports.cshtml[m
[36m@@ -0,0 +1,3 @@[m
[32m+[m[32mï»¿@using MultipleDataGenerator[m
[32m+[m[32m@using MultipleDataGenerator.Models[m
[32m+[m[32m@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers[m
[1mdiff --git a/Views/_ViewStart.cshtml b/Views/_ViewStart.cshtml[m
[1mnew file mode 100644[m
[1mindex 0000000..a5f1004[m
[1m--- /dev/null[m
[1m+++ b/Views/_ViewStart.cshtml[m
[36m@@ -0,0 +1,3 @@[m
[32m+[m[32mï»¿@{[m
[32m+[m[32m    Layout = "_Layout";[m
[32m+[m[32m}[m
[1mdiff --git a/wwwroot/css/site.css b/wwwroot/css/site.css[m
[1mnew file mode 100644[m
[1mindex 0000000..bf4544b[m
[1m--- /dev/null[m
[1m+++ b/wwwroot/css/site.css[m
[36m@@ -0,0 +1,272 @@[m
[32m+[m[32m* {[m
[32m+[m[32m    box-sizing: border-box;[m
[32m+[m[32m    margin: 0;[m
[32m+[m[32m    padding: 0;[m
[32m+[m[32m    font-family: 'Ubuntu', sans-serif;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mbody {[m
[32m+[m[32m    background-color: #110B13;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mli, a {[m
[32m+[m[32m    text-decoration: none;[m
[32m+[m[32m    list-style: none;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/*NAVBAR*/[m
[32m+[m
[32m+[m[32mheader {[m
[32m+[m[32m    display: flex;[m
[32m+[m[32m    justify-content: flex-end;[m
[32m+[m[32m    align-items: center;[m
[32m+[m[32m    padding: 1px 10%;[m
[32m+[m[32m    background: rgba(255, 255, 255, 0.1);[m
[32m+[m[32m    backdrop-filter: blur(15px);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.logo {[m
[32m+[m[32m    cursor: pointer;[m
[32m+[m[32m    margin-right: auto;[m
[32m+[m[32m    width: 70px;[m
[32m+[m[32m    height: 70px;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.nav_links li {[m
[32m+[m[32m    display: inline-block;[m
[32m+[m[32m    padding: 0px 20px;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.nav_links a {[m
[32m+[m[32m    color: #E5CBFF;[m
[32m+[m[32m    font-size: 1.6rem;[m
[32m+[m[32m    font-weight: 300;[m
[32m+[m[32m    font-size: 24px;[m
[32m+[m[32m    transition: all 0.3s ease 0s;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.nav_links li a:hover {[m
[32m+[m[32m        color: #F5EBFF;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m.toggle_btn {[m
[32m+[m[32m    color: #E5CBFF;[m
[32m+[m[32m    font-size: 1.6rem;[m
[32m+[m[32m    cursor: pointer;[m
[32m+[m[32m    display: none;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.toggle_btn:hover {[m
[32m+[m[32m        color: #F5EBFF;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m/*DROPDOWN MENU*/[m
[32m+[m
[32m+[m[32m.dropdown_menu {[m
[32m+[m[32m    display: none;[m
[32m+[m[32m    position: absolute;[m
[32m+[m[32m    top: 120px;[m
[32m+[m[32m    height: 0px;[m
[32m+[m[32m    background: rgba(255, 255, 255, 0.1);[m
[32m+[m[32m    backdrop-filter: blur(20px);[m
[32m+[m[32m    border-radius: 15px;[m
[32m+[m[32m    overflow: hidden;[m
[32m+[m[32m    transition: height .2s cubic-bezier(0.175, 0.885, 0.32, 1.275);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.dropdown_menu.open {[m
[32m+[m[32m    height: 485px;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.dropdown_menu li {[m
[32m+[m[32m    padding: 1rem;[m
[32m+[m[32m    display: flex;[m
[32m+[m[32m    align-items: center;[m
[32m+[m[32m    justify-content: center;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.dropdown_menu li:hover {[m
[32m+[m[32m    background: rgba(255, 255, 255, 0.1);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.dropdown_menu a {[m
[32m+[m[32m    color: #E5CBFF;[m
[32m+[m[32m    font-size: 1.6rem;[m
[32m+[m[32m    transition: all 0.3s ease 0s;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.dropdown_menu a:hover {[m
[32m+[m[32m    color: #F5EBFF;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/*HOME PAGE CONTENT*/[m
[32m+[m
[32m+[m[32msection#homepage_content {[m
[32m+[m[32m    height: calc(100vh - 60px);[m
[32m+[m[32m    display: flex;[m
[32m+[m[32m    flex-direction: column;[m
[32m+[m[32m    align-items: center;[m
[32m+[m[32m    justify-content: center;[m
[32m+[m[32m    text-align: center;[m
[32m+[m[32m    color: #E5CBFF;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m#homepage_content {[m
[32m+[m[32m    font-size: 3rem;[m
[32m+[m[32m    /*margin-bottom: 10rem;*/[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.start_btn {[m
[32m+[m[32m    background-color: #393340;[m
[32m+[m[32m    color: #FFFFFF;[m
[32m+[m[32m    padding: 1.5rem 2.5rem;[m
[32m+[m[32m    border: none;[m
[32m+[m[32m    outline: none;[m
[32m+[m[32m    display: inline-block;[m
[32m+[m[32m    border-radius: 55px;[m
[32m+[m[32m    font-size: 1.6rem;[m
[32m+[m[32m    font-weight: bold;[m
[32m+[m[32m    cursor: pointer;[m
[32m+[m[32m    margin-top: 80px;[m
[32m+[m[32m    /*margin: 0 auto;*/[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.start_btn:hover {[m
[32m+[m[32m    transform: scale(1.03);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.start_btn:active {[m
[32m+[m[32m    transform: scale(0.95);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/*PRESET PAGE CONTENT*/[m
[32m+[m
[32m+[m[32msection#presetpage_content {[m
[32m+[m[32m    height: calc(100vh - 60px);[m
[32m+[m[32m    display: flex;[m
[32m+[m[32m    flex-direction: column;[m
[32m+[m[32m    align-items: center;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.container {[m
[32m+[m[32m    color: #E5CBFF;[m
[32m+[m[32m    margin-top: 60px;[m
[32m+[m[32m    padding-top: 50px;[m
[32m+[m[32m    padding-right: 50px;[m
[32m+[m[32m    padding-left: 50px;[m
[32m+[m[32m    padding-bottom: 50px;[m
[32m+[m[32m    background-color: #1E1B1F;[m
[32m+[m[32m    border-radius: 20px;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.generate_btn {[m
[32m+[m[32m    background-color: #393340;[m
[32m+[m[32m    color: #FFFFFF;[m
[32m+[m[32m    padding: 1rem 1.2rem;[m
[32m+[m[32m    border: none;[m
[32m+[m[32m    outline: none;[m
[32m+[m[32m    display: inline-block;[m
[32m+[m[32m    border-radius: 55px;[m
[32m+[m[32m    font-size: 1.6rem;[m
[32m+[m[32m    font-weight: bold;[m
[32m+[m[32m    cursor: pointer;[m
[32m+[m[32m    margin-top: 20px;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.generate_btn:hover {[m
[32m+[m[32m    transform: scale(1.03);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.generate_btn:active {[m
[32m+[m[32m    transform: scale(0.95);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32minput {[m
[32m+[m[32m    border: none;[m
[32m+[m[32m    padding: 12px;[m
[32m+[m[32m    appearance: none;[m
[32m+[m[32m    width: 300px;[m
[32m+[m[32m    outline: none;[m
[32m+[m[32m    background: #393340;[m
[32m+[m[32m    color: #F5EBFF;[m
[32m+[m[32m    font-weight: 400;[m
[32m+[m[32m    font-size: 1rem;[m
[32m+[m[32m    border-radius: 5px;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32minput:focus {[m
[32m+[m[32m    border: 2px solid #F5EBFF;[m
[32m+[m[32m    transition-delay: 2s;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32minput:focus::placeholder {[m
[32m+[m[32m    color: transparent;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mselect {[m
[32m+[m[32m    border: none;[m
[32m+[m[32m    padding: 12px;[m
[32m+[m[32m    appearance: none;[m
[32m+[m[32m    width: 300px;[m
[32m+[m[32m    outline: none;[m
[32m+[m[32m    background: #393340;[m
[32m+[m[32m    color: #F5EBFF;[m
[32m+[m[32m    font-weight: 400;[m
[32m+[m[32m    font-size: 1rem;[m
[32m+[m[32m    margin-left: 2px;[m
[32m+[m[32m    border-radius: 5px;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.add_btn {[m
[32m+[m[32m    background-color: #74B389;[m
[32m+[m[32m    color: #393340;[m
[32m+[m[32m    padding: 0.8rem 1rem;[m
[32m+[m[32m    border: none;[m
[32m+[m[32m    outline: none;[m
[32m+[m[32m    display: inline-block;[m
[32m+[m[32m    border-radius: 10px;[m
[32m+[m[32m    font-size: 1rem;[m
[32m+[m[32m    font-weight: bold;[m
[32m+[m[32m    cursor: pointer;[m
[32m+[m[32m    margin-left: 2px;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.add_btn:hover {[m
[32m+[m[32m    background-color: #85CC9B;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.remove_btn {[m
[32m+[m[32m    background-color: #B37674;[m
[32m+[m[32m    color: #393340;[m
[32m+[m[32m    padding: 0.8rem 1rem;[m
[32m+[m[32m    border: none;[m
[32m+[m[32m    outline: none;[m
[32m+[m[32m    display: inline-block;[m
[32m+[m[32m    border-radius: 10px;[m
[32m+[m[32m    font-size: 1rem;[m
[32m+[m[32m    font-weight: bold;[m
[32m+[m[32m    cursor: pointer;[m
[32m+[m[32m    margin-left: 1px;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.remove_btn:hover {[m
[32m+[m[32m    background-color: #CC8785;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/*RESPONSIVE DESIGN*/[m
[32m+[m[32m@media (max-width: 992px) {[m
[32m+[m[32m    .nav_links {[m
[32m+[m[32m        display: none;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    .toggle_btn {[m
[32m+[m[32m        display: block;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    .dropdown_menu {[m
[32m+[m[32m        display: block;[m
[32m+[m[32m        width: 80%;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[1mdiff --git a/wwwroot/js/site.js b/wwwroot/js/site.js[m
[1mnew file mode 100644[m
[1mindex 0000000..19c5de0[m
[1m--- /dev/null[m
[1m+++ b/wwwroot/js/site.js[m
[36m@@ -0,0 +1,174 @@[m
[32m+[m[32mï»¿$(document).ready(function ()[m
[32m+[m[32m{[m
[32m+[m[32m    // New field[m
[32m+[m[32m    let select = document.getElementsByName("fieldType");[m
[32m+[m[32m    setSelectionOptions(select);[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mfunction toggleMenu() {[m
[32m+[m[32m    let toggleBtnIcon = document.querySelector('.toggle_btn i')[m
[32m+[m[32m    let dropdownMenu = document.querySelector('.dropdown_menu')[m
[32m+[m
[32m+[m[32m    dropdownMenu.classList.toggle('open');[m
[32m+[m[32m    let isOpen = dropdownMenu.classList.contains('open');[m
[32m+[m
[32m+[m[32m    toggleBtnIcon.classList = isOpen ? 'fa-solid fa-xmark' : 'fa-solid fa-bars';[m[41m    [m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction setSelectionOptions(element) {[m
[32m+[m[32m    const Categories = {[m
[32m+[m[32m        1: "ID",[m
[32m+[m[32m        2: "Name",[m
[32m+[m[32m        3: "Surname",[m
[32m+[m[32m    };[m
[32m+[m[41m    [m
[32m+[m[32m    for (let i = 0; i <= Object.keys(Categories).length; i++) {[m
[32m+[m[32m        let option = document.createElement("option");[m
[32m+[m
[32m+[m[32m        if (i === 0) {[m
[32m+[m[32m            option.text = "--Select--";[m
[32m+[m[32m            option.defaultSelected = true;[m
[32m+[m[32m            option.hidden = true;[m
[32m+[m[32m        }[m
[32m+[m[32m        else {[m
[32m+[m[32m            option.text = Categories[i];[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        $(element).append(option, i);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return element;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction getCurrentRowIndex(element) {[m
[32m+[m[32m    let tr = element.parentElement.parentNode;[m
[32m+[m[32m    let index = tr.rowIndex;[m
[32m+[m
[32m+[m[32m    return index++;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction isMaximumFields(element) {[m
[32m+[m[32m    const maximumFieldsSize = 10;[m
[32m+[m[32m    let currentFieldsSize = element.rows.length;[m
[32m+[m
[32m+[m[32m    if (currentFieldsSize < maximumFieldsSize) {[m
[32m+[m[32m        return false;[m
[32m+[m[32m    } else {[m
[32m+[m[32m        return true;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction addTableField(element) {[m
[32m+[m[32m    let tbody = document.getElementById("configurationTable").getElementsByTagName("tbody")[0];[m
[32m+[m
[32m+[m[32m    if (isMaximumFields(tbody)) {[m
[32m+[m[32m        alert("Maximum 10 fields can be added");[m
[32m+[m[32m        return;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    let newRow = tbody.insertRow(getCurrentRowIndex(element));[m
[32m+[m[32m    let input = document.createElement("input");[m
[32m+[m[32m    let select = document.createElement("select");[m
[32m+[m[32m    let addButton = document.createElement("button");[m
[32m+[m[32m    let removeButton = document.createElement("button");[m
[32m+[m[32m    let firstCell = newRow.insertCell(0);[m
[32m+[m[32m    let secondCell = newRow.insertCell(1);[m
[32m+[m[32m    let thirdCell = newRow.insertCell(2);[m
[32m+[m[32m    let fourthCell = newRow.insertCell(3);[m
[32m+[m
[32m+[m[32m    select = setSelectionOptions(select);[m
[32m+[m[32m    //New field[m
[32m+[m[32m    select.name = "fieldType";[m
[32m+[m[32m    input.placeholder = "Your field name";[m
[32m+[m[32m    //New field[m
[32m+[m[32m    input.name = "fieldName";[m
[32m+[m[32m    addButton.innerHTML = "Add";[m
[32m+[m[32m    addButton.classList += "add_btn";[m
[32m+[m[32m    addButton.onclick = function () {[m
[32m+[m[32m        addTableField(this);[m
[32m+[m[32m    };[m
[32m+[m[32m    removeButton.innerHTML = "Remove";[m
[32m+[m[32m    removeButton.classList += "remove_btn";[m
[32m+[m[32m    removeButton.onclick = function () {[m
[32m+[m[32m        removeTableField(this);[m
[32m+[m[32m    };[m
[32m+[m
[32m+[m[32m    firstCell.append(input);[m
[32m+[m[32m    secondCell.append(select);[m
[32m+[m[32m    thirdCell.append(addButton);[m
[32m+[m[32m    fourthCell.append(removeButton);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction removeTableField(element) {[m
[32m+[m[32m    let tr = element.parentElement.parentNode;[m
[32m+[m[41m    [m
[32m+[m[32m    tr.remove();[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction collectBodyData() {[m
[32m+[m[32m    let fieldNameArray = [];[m
[32m+[m[32m    let fieldTypeArray = [];[m
[32m+[m[32m    let inputs = document.getElementsByName("fieldName");[m
[32m+[m[32m    let selects = document.getElementsByName("fieldType");[m
[32m+[m[32m    let fileFormat = document.getElementsByName("fileFormat");[m
[32m+[m[41m    [m
[32m+[m
[32m+[m[32m    for (i = 0; i < inputs.length; i++) {[m
[32m+[m[32m        fieldNameArray.push(inputs[i].value)[m
[32m+[m[32m        fieldTypeArray.push(selects[i].value)[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    let jsonBodyData = JSON.stringify({[m
[32m+[m[32m        names: fieldNameArray.join(),[m
[32m+[m[32m        types: fieldTypeArray.join(),[m
[32m+[m[32m        format: fileFormat[0].value[m
[32m+[m[32m    });[m
[32m+[m
[32m+[m[32m    let obj = JSON.parse(jsonBodyData);[m
[32m+[m
[32m+[m[32m    return obj;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction requestDataGeneration() {[m
[32m+[m[32m    let bodyData = collectBodyData();[m
[32m+[m[41m    [m
[32m+[m[32m    console.log(bodyData);[m
[32m+[m
[32m+[m[32m    $.ajax({[m
[32m+[m[32m        type: "GET",[m
[32m+[m[32m        url: "/Generator/GetAll",[m
[32m+[m[32m        data: bodyData,[m
[32m+[m[32m        xhrFields: {[m
[32m+[m[32m            responseType: 'blob'[m
[32m+[m[32m        },[m
[32m+[m[32m        success: function (data) {[m
[32m+[m[32m            console.log(data);[m[41m  [m
[32m+[m
[32m+[m[32m            var link = document.createElement('a');[m
[32m+[m[32m            var url = URL.createObjectURL(data);[m
[32m+[m
[32m+[m[32m            if (data.type === "text/plain") {[m
[32m+[m[32m                link.setAttribute('download', "synthdata.json");[m
[32m+[m[32m            }[m
[32m+[m[32m            else {[m
[32m+[m[32m                link.setAttribute('download', "synthdata");[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            link.setAttribute('href', url);[m
[32m+[m[32m            link.style.display = 'none';[m
[32m+[m
[32m+[m[32m            document.body.appendChild(link);[m
[32m+[m
[32m+[m[32m            link.click();[m
[32m+[m
[32m+[m[32m            document.body.removeChild(link);[m
[32m+[m[32m        },[m
[32m+[m[32m        error: function (error) {[m
[32m+[m[32m            alert("Something goin wrong:" + error.fail);[m
[32m+[m[32m            console.log(error);[m
[32m+[m[32m        }[m
[32m+[m[32m    });[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m
